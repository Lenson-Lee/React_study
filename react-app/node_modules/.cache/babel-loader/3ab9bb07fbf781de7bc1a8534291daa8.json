{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_study\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'read',\n      selected_content_id: 2,\n      //contents의 id에 따라 본문에 나오도록.\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      //타이틀이 welcome일 때의 텍스트\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is HyperText'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JS is for interactive'\n      }]\n    };\n  } //render() : 어떤 HTML을 그릴 것인지 결정하는 함수\n\n\n  render() {\n    console.log('App render'); //mode의 값에 따라서 만들어지는 컴포넌트(render)의 결과가 바뀌도록 조건을 생성\n    //<Content title = {_title}\n\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    } else if (this.state.mode === 'read') {\n      var i = 0;\n\n      while (i < this.state.contents.length) {\n        var data = this.state.contents[i];\n\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n\n        i++;\n      }\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub // Subject.js 에서 쓸 onChangePage함수를 만들었다.\n        ,\n        onChangePage: function () {\n          // alert(\"hihihi\");\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          // debugger;\n          this.setState({\n            mode: 'read',\n            // id가 숫자가 아닌 문자인 경우를 대비해 JS코드 Number(id)로 형변환?\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), _article]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_study/react-app/src/App.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","CreateContent","App","constructor","props","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","console","log","_title","_desc","_article","i","length","data","setState","bind","Number","_mode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,MADM;AAEXC,MAAAA,mBAAmB,EAAC,CAFT;AAEa;AACxBC,MAAAA,OAAO,EAAC;AACNC,QAAAA,KAAK,EAAC,KADA;AACOC,QAAAA,GAAG,EAAC;AADX,OAHG;AAMX;AACAC,MAAAA,OAAO,EAAC;AAACF,QAAAA,KAAK,EAAC,SAAP;AAAkBG,QAAAA,IAAI,EAAC;AAAvB,OAPG;AAQXC,MAAAA,QAAQ,EAAC,CACP;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,MAAb;AAAqBG,QAAAA,IAAI,EAAC;AAA1B,OADO,EAEP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,KAAb;AAAoBG,QAAAA,IAAI,EAAC;AAAzB,OAFO,EAGP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,YAAb;AAA2BG,QAAAA,IAAI,EAAC;AAAhC,OAHO;AARE,KAAb;AAcD,GAjByB,CAmB1B;;;AACAG,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFO,CAGP;AACA;;AACF,QAAIC,MAAJ;AAAA,QAAYC,KAAZ;AAAA,QAAmBC,QAAQ,GAAG,IAA9B;;AACA,QAAI,KAAKf,KAAL,CAAWC,IAAX,KAAoB,SAAxB,EAAmC;AACjCY,MAAAA,MAAM,GAAG,KAAKb,KAAL,CAAWM,OAAX,CAAmBF,KAA5B;AACAU,MAAAA,KAAK,GAAG,KAAKd,KAAL,CAAWM,OAAX,CAAmBC,IAA3B;AACAQ,MAAAA,QAAQ,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEF,MAApB;AAA4B,QAAA,IAAI,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAX;AACD,KAJD,MAIO,IAAI,KAAKd,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AACrC,UAAIe,CAAC,GAAG,CAAR;;AACA,aAAMA,CAAC,GAAG,KAAKhB,KAAL,CAAWQ,QAAX,CAAoBS,MAA9B,EAAqC;AACnC,YAAIC,IAAI,GAAG,KAAKlB,KAAL,CAAWQ,QAAX,CAAoBQ,CAApB,CAAX;;AACA,YAAGE,IAAI,CAACT,EAAL,KAAY,KAAKT,KAAL,CAAWE,mBAA1B,EAA+C;AAC7CW,UAAAA,MAAM,GAAGK,IAAI,CAACd,KAAd;AACAU,UAAAA,KAAK,GAAGI,IAAI,CAACX,IAAb;AACA;AACD;;AACDS,QAAAA,CAAC;AACF;;AACDD,MAAAA,QAAQ,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEF,MAApB;AAA4B,QAAA,IAAI,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAX;AACD,KAZM,MAYA,IAAG,KAAKd,KAAL,CAAWC,IAAX,KAAoB,QAAvB,EAAiC;AACtCc,MAAAA,QAAQ,gBAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWG,OAAX,CAAmBC,KAD5B;AAEE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,OAAX,CAAmBE,GAF1B,CAGE;AAHF;AAIE,QAAA,YAAY,EAAG,YAAW;AACxB;AACA,eAAKc,QAAL,CAAc;AAAClB,YAAAA,IAAI,EAAC;AAAN,WAAd;AACD,SAHc,CAGbmB,IAHa,CAGR,IAHQ;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,GAAD;AACE,QAAA,YAAY,EAAE,UAASX,EAAT,EAAY;AACxB;AACA,eAAKU,QAAL,CAAc;AACZlB,YAAAA,IAAI,EAAC,MADO;AAEZ;AACAC,YAAAA,mBAAmB,EAAEmB,MAAM,CAACZ,EAAD;AAHf,WAAd;AAKD,SAPa,CAOZW,IAPY,CAOP,IAPO,CADhB;AASE,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWQ;AATnB;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,UAASc,KAAT,EAAe;AACpC,eAAKH,QAAL,CAAc;AACZlB,YAAAA,IAAI,EAACqB;AADO,WAAd;AAGD,SAJsB,CAIrBF,IAJqB,CAIhB,IAJgB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAvBF,EA4BGL,QA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AA7E2B;;AAgF5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode:'read',\n      selected_content_id:2,  //contents의 id에 따라 본문에 나오도록.\n      subject:{\n        title:'WEB', sub:'world wide web!'\n      },\n      //타이틀이 welcome일 때의 텍스트\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is HyperText'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JS is for interactive'}\n      ]\n    }\n  }\n\n  //render() : 어떤 HTML을 그릴 것인지 결정하는 함수\n  render() {\n  \n    console.log('App render');\n    //mode의 값에 따라서 만들어지는 컴포넌트(render)의 결과가 바뀌도록 조건을 생성\n    //<Content title = {_title}\n  var _title, _desc, _article = null;\n  if (this.state.mode === 'welcome') {\n    _title = this.state.welcome.title;\n    _desc = this.state.welcome.desc;\n    _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n  } else if (this.state.mode === 'read') {\n    var i = 0;\n    while(i < this.state.contents.length){\n      var data = this.state.contents[i];\n      if(data.id === this.state.selected_content_id) {\n        _title = data.title;\n        _desc = data.desc;\n        break;\n      }\n      i++;\n    }\n    _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n  } else if(this.state.mode === 'create') {\n    _article = <CreateContent></CreateContent>\n  }\n  return (\n    <div className=\"App\">\n      <Subject\n        title={this.state.subject.title}\n        sub={this.state.subject.sub}\n        // Subject.js 에서 쓸 onChangePage함수를 만들었다.\n        onChangePage ={function (){\n          // alert(\"hihihi\");\n          this.setState({mode:'welcome'})\n        }.bind(this)}\n      >\n      </Subject>\n\n      <TOC \n        onChangePage={function(id){\n          // debugger;\n          this.setState({\n            mode:'read',\n            // id가 숫자가 아닌 문자인 경우를 대비해 JS코드 Number(id)로 형변환?\n            selected_content_id: Number(id)\n          });\n        }.bind(this)}\n        data={this.state.contents}\n        ></TOC>\n      <Control onChangeMode={function(_mode){\n        this.setState({\n          mode:_mode\n        });\n      }.bind(this)}></Control>\n      {_article}\n    </div>\n  );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}