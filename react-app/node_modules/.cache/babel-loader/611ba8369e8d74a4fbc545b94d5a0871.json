{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_study\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport Subject from './components/Subject';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'read',\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web!'\n      },\n      //타이틀이 welcome일 때의 텍스트\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is HyperText'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JS is for interactive'\n      }]\n    };\n  } //render() : 어떤 HTML을 그릴 것인지 결정하는 함수\n\n\n  render() {\n    console.log('App render'); //mode의 값에 따라서 만들어지는 컴포넌트(render)의 결과가 바뀌도록 조건을 생성\n    //<Content title = {_title}\n\n    var _title,\n        _desc = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === 'read') {\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub // Subject.js 에서 쓸 onChangePage함수를 만들었다.\n        ,\n        onChangePage: function () {\n          // alert(\"hihihi\");\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function () {\n          this.setState({\n            mode: 'read'\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_study/react-app/src/App.js"],"names":["React","Component","TOC","Content","Subject","App","constructor","props","state","mode","subject","title","sub","welcome","desc","contents","id","render","console","log","_title","_desc","setState","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,MADM;AAEXC,MAAAA,OAAO,EAAC;AACNC,QAAAA,KAAK,EAAC,KADA;AACOC,QAAAA,GAAG,EAAC;AADX,OAFG;AAKX;AACAC,MAAAA,OAAO,EAAC;AAACF,QAAAA,KAAK,EAAC,SAAP;AAAkBG,QAAAA,IAAI,EAAC;AAAvB,OANG;AAOXC,MAAAA,QAAQ,EAAC,CACP;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,MAAb;AAAqBG,QAAAA,IAAI,EAAC;AAA1B,OADO,EAEP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,KAAb;AAAoBG,QAAAA,IAAI,EAAC;AAAzB,OAFO,EAGP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,YAAb;AAA2BG,QAAAA,IAAI,EAAC;AAAhC,OAHO;AAPE,KAAb;AAaD,GAhByB,CAkB1B;;;AACAG,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFO,CAGP;AACA;;AACF,QAAIC,MAAJ;AAAA,QAAYC,KAAK,GAAG,IAApB;;AACA,QAAI,KAAKb,KAAL,CAAWC,IAAX,KAAoB,SAAxB,EAAmC;AACjCW,MAAAA,MAAM,GAAG,KAAKZ,KAAL,CAAWK,OAAX,CAAmBF,KAA5B;AACAU,MAAAA,KAAK,GAAG,KAAKb,KAAL,CAAWK,OAAX,CAAmBC,IAA3B;AACD,KAHD,MAGO,IAAI,KAAKN,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AACrCW,MAAAA,MAAM,GAAG,KAAKZ,KAAL,CAAWO,QAAX,CAAoB,CAApB,EAAuBJ,KAAhC;AACAU,MAAAA,KAAK,GAAG,KAAKb,KAAL,CAAWO,QAAX,CAAoB,CAApB,EAAuBD,IAA/B;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,OAAX,CAAmBC,KAD5B;AAEE,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,GAF1B,CAGE;AAHF;AAIE,QAAA,YAAY,EAAG,YAAW;AACxB;AACA,eAAKU,QAAL,CAAc;AAACb,YAAAA,IAAI,EAAC;AAAN,WAAd;AACD,SAHc,CAGbc,IAHa,CAGR,IAHQ;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,GAAD;AACE,QAAA,YAAY,EAAE,YAAU;AACtB,eAAKD,QAAL,CAAc;AAACb,YAAAA,IAAI,EAAC;AAAN,WAAd;AACD,SAFa,CAEZc,IAFY,CAEP,IAFO,CADhB;AAIE,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWO;AAJnB;AAAA;AAAA;AAAA;AAAA,cAZF,eAkBE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEK,MAAhB;AAAwB,QAAA,IAAI,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAtD2B;;AAyD5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport Subject from './components/Subject';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode:'read',\n      subject:{\n        title:'WEB', sub:'world wide web!'\n      },\n      //타이틀이 welcome일 때의 텍스트\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is HyperText'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JS is for interactive'}\n    ]\n    }\n  }\n\n  //render() : 어떤 HTML을 그릴 것인지 결정하는 함수\n  render() {\n  \n    console.log('App render');\n    //mode의 값에 따라서 만들어지는 컴포넌트(render)의 결과가 바뀌도록 조건을 생성\n    //<Content title = {_title}\n  var _title, _desc = null;\n  if (this.state.mode === 'welcome') {\n    _title = this.state.welcome.title;\n    _desc = this.state.welcome.desc;\n  } else if (this.state.mode === 'read') {\n    _title = this.state.contents[0].title;\n    _desc = this.state.contents[0].desc;\n  }\n  return (\n    <div className=\"App\">\n      <Subject\n        title={this.state.subject.title}\n        sub={this.state.subject.sub}\n        // Subject.js 에서 쓸 onChangePage함수를 만들었다.\n        onChangePage ={function (){\n          // alert(\"hihihi\");\n          this.setState({mode:'welcome'})\n        }.bind(this)}\n      >\n      </Subject>\n\n      <TOC \n        onChangePage={function(){\n          this.setState({mode:'read'});\n        }.bind(this)}\n        data={this.state.contents}\n        ></TOC>\n      <Content title={_title} desc={_desc}></Content>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}